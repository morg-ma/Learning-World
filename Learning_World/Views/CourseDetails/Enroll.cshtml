@model UserRegistrationViewModel
@{
    ViewBag.Title = "Enroll in Course";
}
<div class="text-center wow fadeInUp">
    <h1 class="section-title bg-white text-center text-primary px-3 mt-4">Checkout</h1>
</div>

<div class="row p-5 wow fadeInUp" style="width: 100%;">
    <!-- Left Section: Payment Form -->
    <div class="col-md-8">
        <h2>Billing Address</h2>
        <form asp-action="Enroll" method="post" onsubmit="return validateForm()">
            <input type="hidden" asp-for="CourseId" />
            <input type="hidden" asp-for="CourseName" />
            <input type="hidden" asp-for="CoursePrice" />
            <!-- Hidden field to store username from cookies -->
            <input type="hidden" id="cookieUserName" value="@User.Identity.Name" />

            <div class="mb-3">
                <label asp-for="UserName" class="form-label"></label>
                <input asp-for="UserName" class="form-control" required />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label for="Country" class="form-label">Country</label>
                <select asp-for="Country" class="form-select" required>
                    <option value="">Select a Country</option>
                    <option value="US">United States</option>
                    <option value="UK">United Kingdom</option>
                    <option value="CA">Canada</option>
                    <option value="AU">Australia</option>
                    <option value="FR">France</option>
                    <option value="DE">Germany</option>
                    <option value="IN">India</option>
                    <option value="CN">China</option>
                    <option value="JP">Japan</option>
                    <option value="BR">Brazil</option>
                    <option value="EG">Egypt</option>
                </select>
                <span asp-validation-for="Country" class="text-danger"></span>
            </div>

            <!-- Payment Method Selection -->
            <h2> Payment Method Details </h2>
            <div class="payment-method-cards wow fadeInUp">
                <div class="card mb-3 payment-card" id="creditCardOption" onclick="selectPaymentMethod()">
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <img src="~/images/card.png" alt="Credit Card Icon" class="me-2" style="width: 40px;" />
                            <h5 class="card-title mb-0">Credit Card</h5>
                        </div>
                        <img src="~/images/credits.jfif" alt="Additional Icon" style="width: 150px; height: auto;" />
                    </div>
                </div>
            </div>

            <!-- Payment Fields -->
            <div id="paymentFieldsContainer" class="wow fadeInUp">
                <!-- Credit Card Fields -->
                <div id="creditCardFields" style="display: none;">
                    <div class="mb-3">
                        <label asp-for="CardName" class="form-label">Name on Card</label>
                        <input type="text" id="CardName" class="form-control" asp-for="CardName" required />
                        <span asp-validation-for="CardName" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="CardNumber" class="form-label">Card Number</label>
                        <input type="text" id="CardNumber" class="form-control" asp-for="CardNumber" required />
                        <span asp-validation-for="CardNumber" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="ExpiryDate" class="form-label">Expiry Date (MM/YY)</label>
                        <input type="text" id="ExpiryDate" class="form-control" asp-for="ExpiryDate" placeholder="MM/YY" required />
                        <span asp-validation-for="ExpiryDate" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="CVC" class="form-label">CVC/CVV</label>
                        <input type="text" id="CVC" class="form-control" asp-for="CVC" required />
                        <span asp-validation-for="CVC" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Enroll Now</button>
        </form>
    </div>

    <!-- Right Section: Course Summary -->
    <div class="col-md-4">
        <h2>Summary</h2>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Course Name: @Model.CourseName</h5>
                <p class="card-text">Price: $@Model.CoursePrice</p>
                <!-- You can add more course details here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById("creditCardFields").style.display = "none";

        function validateForm() {
            // const isUserNameValid = validateUserName();
            const isCardInfoValid = validateCardInfo();
            // return isUserNameValid && isCardInfoValid; // Return true only if all validations pass
            return isCardInfoValid; // Return true only if all validations pass
        }

        // function validateUserName() {
        //     const enteredUserName = document.getElementById('UserName').value;
        //     const cookieUserName = document.getElementById('cookieUserName').value;

        //     if (enteredUserName !== cookieUserName) {
        //         alert("The username does not match the one stored in cookies. Please check your input.");
        //         return false; // Prevent form submission
        //     }

        //     return true; // Allow form submission
        // }

        function validateCardInfo() {
            const cardNumber = document.getElementById('CardNumber').value.replace(/\s+/g, ''); // Remove spaces
            const expiryDate = document.getElementById('ExpiryDate').value;
            const cvc = document.getElementById('CVC').value;

            // Validate card number (Luhn algorithm)
            const cardValid = validateCardNumber(cardNumber);
            // Validate expiry date
            const expiryValid = validateExpiryDate(expiryDate);
            // Validate CVC
            const cvcValid = validateCVC(cvc);

            if (!cardValid) {
                alert("Please enter a valid credit card number.");
                return false;
            }
            if (!expiryValid) {
                alert("Please enter a valid expiry date (MM/YY).");
                return false;
            }
            if (!cvcValid) {
                alert("Please enter a valid CVC.");
                return false;
            }

            return true; // All validations passed
        }

        function validateCardNumber(cardNumber) {
            // Check if card number is 13 to 19 digits
            const regex = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12}|[3-6][0-9]{11}|7[0-9]{14}|[3][0-9]{11}|[4][0-9]{11}|[5][0-9]{11}|[6][0-9]{11}|[7][0-9]{11}|[8][0-9]{11}|[9][0-9]{11})$/;
            return regex.test(cardNumber) && luhnCheck(cardNumber);
        }

        function luhnCheck(cardNumber) {
            let sum = 0;
            let shouldDouble = false;

            for (let i = cardNumber.length - 1; i >= 0; i--) {
                let digit = parseInt(cardNumber.charAt(i), 10);

                if (shouldDouble) {
                    digit *= 2;
                    if (digit > 9) {
                        digit -= 9;
                    }
                }

                sum += digit;
                shouldDouble = !shouldDouble;
            }

            return sum % 10 === 0;
        }

        function validateExpiryDate(expiryDate) {
            const regex = /^(0[1-9]|1[0-2])\/?([0-9]{2})$/; // MM/YY format
            const match = expiryDate.match(regex);
            if (!match) {
                return false;
            }
            const month = parseInt(match[1], 10);
            const year = parseInt(match[2], 10) + 2000; // Assuming year is in 2000s
            const now = new Date();
            const currentYear = now.getFullYear();
            const currentMonth = now.getMonth() + 1; // Months are 0-indexed

            return year > currentYear || (year === currentYear && month >= currentMonth);
        }

        function validateCVC(cvc) {
            const regex = /^[0-9]{3,4}$/; // CVC should be 3 or 4 digits
            return regex.test(cvc);
        }

        function selectPaymentMethod() {
            const creditCardFields = document.getElementById("creditCardFields");
            creditCardFields.style.display = "block";
        }
    </script>
}
